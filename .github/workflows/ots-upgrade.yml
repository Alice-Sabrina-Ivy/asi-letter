name: ots-upgrade
on:
  schedule:
    - cron: '23 * * * *'   # hourly (default branch only)
  push:
    branches: [ test ]      # temp push trigger for testing
    paths:
      - 'letter/*.asc.ots'
      - 'docs/index.html'
      - '.github/workflows/ots-upgrade.yml'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  upgrade-and-update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install deps (OTS client + Esplora-backed verifier)
        run: |
          python -m pip install --upgrade opentimestamps-client
          sudo apt-get update && sudo apt-get install -y jq
          wget -q https://go.dev/dl/go1.22.5.linux-amd64.tar.gz
          sudo tar -C /usr/local -xzf go1.22.5.linux-amd64.tar.gz
          echo "/usr/local/go/bin" >> $GITHUB_PATH
          /usr/local/go/bin/go install github.com/fiatjaf/ots@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Upgrade proofs in /letter (if any)
        shell: bash
        run: |
          set -euo pipefail
          shopt -s nullglob
          changed=0
          for p in letter/*.asc.ots; do
            cp "$p" "$p.bak" || true
            ots upgrade "$p" || true
            if ! cmp -s "$p" "$p.bak"; then
              echo "Upgraded $p"
              changed=1
            fi
            rm -f "$p.bak"
          done
          echo "changed_letter=$changed" >> "$GITHUB_OUTPUT"

      - name: Extract embedded proof from docs/index.html
        id: extract
        shell: bash
        run: |
          set -euo pipefail
          HTML="docs/index.html"
          if [[ -f "$HTML" ]]; then
            B64="$(awk 'BEGIN{RS="";ORS=""} {if (match($0,/<script id="ots-proof"[^>]*>([^<]*)<\/script>/,m)) print m[1];}' "$HTML")"
            echo "b64_present=$([[ -n "$B64" ]] && echo 1 || echo 0)" >> "$GITHUB_OUTPUT"
            if [[ -n "$B64" ]]; then
              echo -n "$B64" | base64 -d > /tmp/proof.ots || true
            fi
          else
            echo "b64_present=0" >> "$GITHUB_OUTPUT"
          fi

      - name: Upgrade embedded proof (if present) and update footer text
        if: steps.extract.outputs.b64_present == '1'
        shell: bash
        run: |
          set -euo pipefail
          HTML="docs/index.html"
          ots upgrade /tmp/proof.ots || true

          set +e
          OUT="$(ots verify /tmp/proof.ots 2>&1)"
          ALT="$("$HOME/go/bin/ots" verify /tmp/proof.ots 2>&1)"
          OUT="$OUT"$'\n'"$ALT"
          set -e
          HEIGHT="$(echo "$OUT" | grep -Eo 'block[[:space:]]*\[?[0-9]+\]?' | grep -Eo '[0-9]+' | tail -n1 || true)"

          NEW_B64="$(base64 -w0 /tmp/proof.ots)"
          awk -v b64="$NEW_B64" -v height="$HEIGHT" '
            BEGIN{RS=""; ORS=""}
            {
              gsub(/(<script id="ots-proof"[^>]*>)[^<]*/,"\\1" b64,$0);
              gsub(/(<pre id="ots-proof-b64"[^>]*>)[^<]*/,"\\1" b64,$0);
              if (length(height) > 0) {
                gsub(/<p id="ots-line">.*<\/p>/,
                     "<p id=\"ots-line\">Bitcoin block <strong>" height "</strong> attests <code>letter.md.asc</code> existed prior to that block.</p>", $0);
              } else {
                gsub(/<p id="ots-line">.*<\/p>/,
                     "<p id=\"ots-line\">Bitcoin anchoring pending for <code>letter.md.asc</code>. Proof will update automatically.</p>", $0);
              }
              print
            }' "$HTML" > "$HTML.tmp"
          mv "$HTML.tmp" "$HTML"

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore(ots): upgrade proofs (/letter & embedded) [skip ci]"
          file_pattern: |
            letter/*.asc.ots
            docs/index.html
