name: releases-manifest
on:
  push:
    paths:
      - "letter/**"
      - "keys/**"
      - "scripts/gen_releases_manifest.py"
  workflow_dispatch: {}

concurrency:
  group: letter-artifacts-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: write
  actions: read

jobs:
  build:
    if: ${{ github.event_name != 'push' || !contains(github.event.head_commit.message, '[manifest-auto]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Generate manifest (python)
        run: python3 scripts/gen_releases_manifest.py
      - name: Update version metadata in docs
        run: python3 scripts/update_version_metadata.py
      - name: Rebase onto latest ${{ github.ref_name }} before committing
        shell: bash
        run: |
          set -euo pipefail
          branch="${GITHUB_REF_NAME:-${GITHUB_REF#refs/heads/}}"
          if [[ -z "${branch}" ]]; then
            echo "Unable to determine branch name from GITHUB_REF/GITHUB_REF_NAME" >&2
            exit 1
          fi
          git fetch origin "$branch"
          git pull --rebase --autostash origin "$branch"
      - name: Wait for GitHub Pages to be idle
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: .github/scripts/wait_for_pages_idle.sh
      - name: Sync docs with latest letter
        run: |
          python3 scripts/sync_docs_with_latest.py
          python3 scripts/sync_docs_with_latest.py --check
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ github.ref_name }}
          commit_message: "chore(manifest): refresh release assets [manifest-auto]"
          file_pattern: |
            letter/RELEASES.json
            docs/letter.md
            docs/index.html
