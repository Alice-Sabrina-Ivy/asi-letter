name: ots-upgrade-scheduler

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch: {}

permissions:
  contents: read
  actions: write
  workflows: write

jobs:
  maybe-trigger:
    if: ${{ github.event_name != 'schedule' || vars.OTS_UPGRADE_CRON_ENABLED != 'false' }}
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.decision.outputs.should_run }}
      cron_state: ${{ steps.decision.outputs.cron_state }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Determine whether an update is still pending
        id: decision
        env:
          EVENT_NAME: ${{ github.event_name }}
          REF_NAME: ${{ github.ref_name }}
          REF: ${{ github.ref }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          REPOSITORY: ${{ github.repository }}
        shell: bash
        run: |
          set -euo pipefail

          python .github/scripts/check_letter_finalization.py \
            --event-name "$EVENT_NAME" \
            --repository "$REPOSITORY" \
            --ref-name "$REF_NAME" \
            --ref "$REF" \
            --default-branch "$DEFAULT_BRANCH" \
            --force false \
            --github-output "${GITHUB_OUTPUT:-}"

      - name: Dispatch ots-upgrade workflow
        if: steps.decision.outputs.should_run == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const rawRef = context.ref || `refs/heads/${context.payload?.repository?.default_branch || 'main'}`;
            const branch = rawRef.replace(/^refs\/heads\//, '');
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ots-upgrade.yml',
              ref: branch,
              inputs: { force: 'false' },
            });

  manage-cron-flag:
    needs: maybe-trigger
    if: ${{ needs.maybe-trigger.outputs.cron_state != 'none' }}
    runs-on: ubuntu-latest
    steps:
      - name: Update cron toggle variable
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DESIRED: ${{ needs.maybe-trigger.outputs.cron_state }}
        run: |
          set -euo pipefail

          repo="${GITHUB_REPOSITORY:-}"
          if [[ -n "$repo" ]]; then
            repo_args=(--repo "$repo")
          else
            repo_args=()
          fi

          case "$DESIRED" in
            enable)
              gh variable set OTS_UPGRADE_CRON_ENABLED --body true "${repo_args[@]}"
              ;;
            disable)
              gh variable set OTS_UPGRADE_CRON_ENABLED --body false "${repo_args[@]}"
              ;;
            *)
              echo "No cron toggle requested."
              ;;
          esac
